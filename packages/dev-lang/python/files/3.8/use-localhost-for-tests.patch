From a194af5a2d5cf5bfd0e8df9868819d893f1066b4 Mon Sep 17 00:00:00 2001
From: Paul Seidler <sepek@exherbo.org>
Date: Sun, 27 Nov 2011 14:09:36 +0100
Subject: [PATCH 3/3] use localhost for tests

Upstream: no
Rebased for 3.7

---
 Lib/test/test_httplib.py | 2 +-
 Lib/test/test_ssl.py     | 4 ++--
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/Lib/test/test_httplib.py b/Lib/test/test_httplib.py
index 30b6c0c..ffc9860 100644
--- a/Lib/test/test_httplib.py
+++ b/Lib/test/test_httplib.py
@@ -692,7 +692,7 @@ class SourceAddressTest(TestCase):
 
     def testHTTPConnectionSourceAddress(self):
         self.conn = client.HTTPConnection(HOST, self.port,
-                source_address=('', self.source_port))
+                source_address=('localhost', self.source_port))
         self.conn.connect()
         self.assertEqual(self.conn.sock.getsockname()[1], self.source_port)
 
diff --git a/Lib/test/test_ssl.py b/Lib/test/test_ssl.py
index 8d98b80..d7c91f5 100644
--- a/Lib/test/test_ssl.py
+++ b/Lib/test/test_ssl.py
@@ -478,10 +478,10 @@ class BasicSocketTests(unittest.TestCase):
             self.assertRaises(OSError, ss.recvfrom, 1)
             self.assertRaises(OSError, ss.recvfrom_into, bytearray(b'x'), 1)
             self.assertRaises(OSError, ss.send, b'x')
-            self.assertRaises(OSError, ss.sendto, b'x', ('0.0.0.0', 0))
+            self.assertRaises(OSError, ss.sendto, b'x', ('localhost', 0))
             self.assertRaises(NotImplementedError, ss.dup)
             self.assertRaises(NotImplementedError, ss.sendmsg,
-                              [b'x'], (), 0, ('0.0.0.0', 0))
+                              [b'x'], (), 0, ('localhost', 0))
             self.assertRaises(NotImplementedError, ss.recvmsg, 100)
             self.assertRaises(NotImplementedError, ss.recvmsg_into,
                               [bytearray(100)])
@@ -2381,7 +2381,7 @@ class AsyncoreEchoServer(threading.Thread):
         def __init__(self, certfile):
             self.certfile = certfile
             sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
-            self.port = support.bind_port(sock, '')
+            self.port = support.bind_port(sock)
             asyncore.dispatcher.__init__(self, sock)
             self.listen(5)
 
-- 
2.16.2

