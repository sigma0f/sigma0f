Source: based on a patch from Ingmar Vanhassel <ingmar@exherbo.org>,
        based on Debian patch by John V. Belmonte <jbelmonte@debian.org>
Upstream: No, won't be accepted either:
          This is not done upstream for portability.
          http://article.gmane.org/gmane.comp.lang.lua.general/18519
Reason: Build a shared liblua

From c3f86afeed407e224a565b0f89f074b5379256f0 Mon Sep 17 00:00:00 2001
From: Heiko Becker <heirecka@exherbo.org>
Date: Mon, 19 Jan 2015 17:01:08 +0100
Subject: [PATCH] Add support for shared library to makefiles.

Based on a patch from Ingmar Vanhassel for lua-5.1.x.
---
 Makefile     | 22 ++++++++++++++++++++++
 src/Makefile | 26 ++++++++++++++++++++++++++
 2 files changed, 48 insertions(+)

diff --git a/Makefile b/Makefile
index 7fa91c8..d13b420 100644
--- a/Makefile
+++ b/Makefile
@@ -112,3 +112,25 @@ pc:
 .PHONY: all $(PLATS) clean test install local none dummy echo pecho lecho
 
 # (end of Makefile)
+
+# Use libtool for binary installs, etc.
+
+export V
+export LIBTOOL = libtool --quiet --tag=CC
+# See libtool manual about how to set this
+export LIB_VERSION = 0:0:0
+
+exherbo_clean:
+	cd src; $(MAKE) $@
+
+exherbo_install: exherbo_linux
+	cd src; mkdir -p $(INSTALL_BIN) $(INSTALL_INC) $(INSTALL_LIB) $(INSTALL_MAN)
+	cd src; $(LIBTOOL) --mode=install $(INSTALL_EXEC) lua$(V) luac$(V) $(INSTALL_BIN)
+	cd src; $(INSTALL_DATA) $(TO_INC) $(INSTALL_INC)
+	cd src; $(LIBTOOL) --mode=install $(INSTALL_DATA) liblua$(V).la $(INSTALL_LIB)
+	$(foreach NAME,$(TO_MAN),$(INSTALL_DATA) doc/$(NAME) $(INSTALL_MAN)/$(basename $(NAME))$(V)$(suffix $(NAME));)
+
+# ISSUE: MYCFLAGS not honored in the case of a CFLAGS override
+exherbo_linux:
+	cd src; $(MAKE) exherbo_all CFLAGS+=-DLUA_USE_LINUX \
+		LIB_LIBS="-lm -ldl" LUA_LIBS="-lreadline -lncurses"
diff --git a/src/Makefile b/src/Makefile
index 2e7a412..556e853 100644
--- a/src/Makefile
+++ b/src/Makefile
@@ -194,4 +194,30 @@ lvm.o: lvm.c lprefix.h lua.h luaconf.h ldebug.h lstate.h lobject.h \
 lzio.o: lzio.c lprefix.h lua.h luaconf.h llimits.h lmem.h lstate.h \
   lobject.h ltm.h lzio.h
 
+# The following rules use libtool for compiling and linking in order to
+# provide shared library support.  While we are at it, our desired version
+# suffixes are added to the targets, preventing conflicts with rules in
+# the upstream makefile.
+
+LIB_NAME = liblua$(V).la
+LIB_OBJS = $(CORE_O:.o=.lo) $(LIB_O:.o=.lo)
+
+%.lo %.o: %.c
+	$(LIBTOOL) --mode=compile $(CC) -c $(CPPFLAGS) $(CFLAGS) $<
+
+$(LIB_NAME) $(LIB_NAME:.la=.a): $(LIB_OBJS)
+	$(LIBTOOL) --mode=link $(CC) -version-info $(LIB_VERSION) \
+            -rpath $(RPATH) -o $(LIB_NAME) $(LIB_OBJS) $(LDFLAGS) $(LIB_LIBS)
+
+lua$(V): $(LUA_O) $(LIB_NAME)
+	$(LIBTOOL) --mode=link $(CC) -static -Wl,-E -o $@ $(LUA_O) $(LIB_NAME) $(LDFLAGS) $(LUA_LIBS)
+
+luac$(V): $(LUAC_O) $(LIB_NAME)
+	$(LIBTOOL) --mode=link $(CC) -static -o $@ $(LUAC_O) $(LIB_NAME) $(LDFLAGS)
+
+exherbo_clean:
+	$(LIBTOOL) --mode=clean $(RM) $(ALL_O:.o=.lo) $(LIB_NAME) lua$(V) luac$(V)
+
+exherbo_all: $(LIB_NAME) lua$(V) luac$(V)
+
 # (end of Makefile)
-- 
2.3.7

