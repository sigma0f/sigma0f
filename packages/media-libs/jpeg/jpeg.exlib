# Copyright 2008 Kim HÃ¸jgaard-Hansen
# Copyright 2014 Heiko Becker <heirecka@exherbo.org>
# Distributed under the terms of the GNU General Public License v2

require alternatives

export_exlib_phases src_install pkg_postinst

SUMMARY="Library for JPEG image compression"
HOMEPAGE="https://www.ijg.org"
DOWNLOADS="${HOMEPAGE}/files/${PN}src.v${PV}.tar.gz"

LICENCES="IJG"
MYOPTIONS="shared parts: binaries development documentation libraries"

DEPENDENCIES="
    !media-libs/jpeg:0 [[
	description = [ Uninstall media-libs/jpeg:0 after switching to the slotted version ]
	resolution = uninstall-blocked-after
    ]]
    !media-libs/libjpeg-turbo [[
	description = [ Both packages collide heavily ]
	resolution = uninstall-blocked-after
    ]]
"

DEFAULT_SRC_CONFIGURE_PARAMS=(
    --with-pic=yes
)

DEFAULT_SRC_CONFIGURE_OPTIONS=()

DEFAULT_SRC_CONFIGURE_OPTION_ENABLES=(
    shared
)

jpeg_src_install() {
    local host=$(exhost --target)

    default

    local libraries=(
	libjpeg.a  libjpeg${SLOT}.a
	libjpeg.la libjpeg${SLOT}.la
    )

    if option shared; then
	libraries+=(
	    libjpeg.so libjpeg${SLOT}.so
	)
    fi

    if optionq parts:libraries; then
	for (( i = 0; i < ${#libraries[@]}; i++ )); do
	    edo mv "${IMAGE}"/usr/${host}/lib/${libraries[i]} "${IMAGE}"/usr/${host}/lib/${libraries[i+1]}
	    alternatives_for _${host}_${PN} ${SLOT} ${SLOT} /usr/${host}/lib/${libraries[i]} ${libraries[++i]}
	done
    fi

    # Rename to allow slotting with alternatives light
    if optionq parts:binaries; then
	edo pushd "${IMAGE}"/usr/${host}/bin
	for binary in * ; do
	    edo mv "${IMAGE}"/usr/${host}/bin/${binary}{,${SLOT}}
	    alternatives_for _${host}_${PN} ${SLOT} ${SLOT} /usr/${host}/bin/${binary} ${binary}${SLOT}
	done
	edo popd
    fi

    # Create the directory the headers are moved in below
    if optionq parts:development; then
	edo mkdir "${IMAGE}"/usr/${host}/include/libjpeg${SLOT}

	edo pushd "${IMAGE}"/usr/${host}/include
	for header in *.h ; do
	    edo mv "${IMAGE}"/usr/${host}/include/${header} "${IMAGE}"/usr/${host}/include/libjpeg${SLOT}/${header}
	    alternatives_for _${host}_${PN} ${SLOT} ${SLOT} /usr/${host}/include/${header} libjpeg${SLOT}/${header}
	done
	edo popd
    fi

    if optionq parts:documentation; then
	edo pushd "${IMAGE}"/usr/share/man/man1
	for man_page in *.1 ; do
	    edo mv "${IMAGE}"/usr/share/man/man1/{${man_page},${man_page:0:-2}${SLOT}.1}
	    alternatives_for _${PN} ${SLOT} ${SLOT} /usr/share/man/man1/${man_page} ${man_page:0:-2}${SLOT}.1
	done
	edo popd
    fi

    expart binaries {,${ALTERNATIVES_DIR}/_${host}_${PN}/${SLOT}}/usr/$(exhost --target)/bin
    expart libraries {,${ALTERNATIVES_DIR}/_${host}_${PN}/${SLOT}}/usr/$(exhost --target)/lib
    expart development {,${ALTERNATIVES_DIR}/_${host}_${PN}/${SLOT}}/usr/$(exhost --target)/include
    expart development {,${ALTERNATIVES_DIR}/_${host}_${PN}/${SLOT}}/usr/$(exhost --target)/lib/pkgconfig
    expart documentation {,${ALTERNATIVES_DIR}/_${PN}/${SLOT}}/usr/share/{doc,man}
}

jpeg_pkg_postinst() {
    local host=$(exhost --target)

    # We can't force alternatives to overwrite files with symlinks
    if has_version --root "media-libs/jpeg:0"; then
	local files=(
	    "${ROOT}"/usr/${host}/bin/{{c,d}jpeg,jpegtran,{rd,wr}jpgcom}
	    "${ROOT}"/usr/${host}/include/{jconfig,jerror,jmorecfg,jpeglib}.h
	    "${ROOT}"/usr/${host}/lib{,32,64}/libjpeg.{a,la}
	    "${ROOT}"/usr/share/man/man1/{{c,d}jpeg,jpegtran,{rd,wr}jpgcom}.1
	)
	for f in "${files[@]}" ; do
	    [[ -e ${f} && ! -L ${f} ]] && ( nonfatal edo rm "${f}" || eerror "rm -r ${f}" );
	done
    fi

    alternatives_pkg_postinst
}
