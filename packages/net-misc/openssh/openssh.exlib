# Copyright 2008-2015 Wulf C. Krueger <philantrop@exherbo.org>
# Copyright 2011 Ingmar Vanhassel
# Distributed under the terms of the GNU General Public License v2
# Based in part upon 'openssh-5.0_p1-r1.ebuild' from Gentoo, which is:
#     Copyright 1999-2008 Gentoo Foundation

require autotools [ supported_autoconf=[ 2.5 ] supported_automake=[ 1.16 ] ] pam systemd-service
require openrc-service [ openrc_confd_files=[ "${FILES}"/openrc/confd ] ]

export_exlib_phases pkg_pretend src_prepare src_compile src_test src_install pkg_postinst

myexparam X509_version=

exparam -v X509_VERSION X509_version

MY_PNV=${PNV/_/}

SUMMARY="OpenSSH is a free version of the SSH connectivity tools"
HOMEPAGE="https://www.${PN}.com/"
DOWNLOADS="
    mirror://openbsd/OpenSSH/portable/${MY_PNV}.tar.gz
"
if [[ -n ${X509_VERSION} ]]; then
    X509_PATCH="${MY_PNV}+x509-${X509_VERSION}.diff.gz"
    DOWNLOADS+="
	X509? ( https://roumenpetrov.info/${PN}/x509-${X509_VERSION}/${X509_PATCH} )
    "
fi

UPSTREAM_RELEASE_NOTES="${HOMEPAGE}/txt/release-${PV%_p*}"

LICENCES="BSD-3"
SLOT="0"
MYOPTIONS="
    gtk  [[ description = [ Build gnome-ssh-askpass ] ]]
    kerberos
    ldns [[ description = [ Use ldns for DNSSEC support ] ]]
    pam
    readline [[ description = [ Use libedit for tab completion in sftp ] ]]
    security-key [[ description = [ Support for U2F/FIDO hardware authenticators ] ]]
    X
    kerberos? ( ( providers: heimdal krb5 ) [[ number-selected = exactly-one ]] )
    ( providers: libressl openssl ) [[ number-selected = at-most-one ]]
"

if [[ -n ${X509_VERSION} ]]; then
    MYOPTIONS+="
	X509 [[ description = [ Adds support for X.509 certificate authentication ] ]]
    "
fi

# Unfortunately, the tests need to be run as root.
RESTRICT="userpriv"

DEPENDENCIES="
    build:
	sys-kernel/linux-headers
	virtual/pkg-config
    build+run:
	user/sshd
	sys-apps/shadow
	sys-libs/zlib[>=1.2.3]
	gtk? ( x11-libs/gtk+:2 )
	kerberos? (
	    providers:heimdal? ( app-crypt/heimdal )
	    providers:krb5? ( app-crypt/krb5 )
	)
	ldns? ( net-libs/ldns )
	pam? ( sys-libs/pam[>=0.78] )
	providers:libressl? ( dev-libs/libressl:= )
	providers:openssl? ( dev-libs/openssl[>=1.0.1] )
	readline? ( dev-libs/libedit )
	security-key? (
	    dev-libs/libcbor
	    dev-libs/libfido2[>=1.5.0]
	)
	X? ( x11-apps/xauth )
"

DEFAULT_SRC_CONFIGURE_PARAMS+=(
    --sysconfdir=/etc/ssh
    --enable-pkcs11
    --datadir=/usr/share/openssh
    --disable-strip
    --with-ldflags="${LDFLAGS}"
    --with-pid-dir=/run
    --with-privsep-path=/var/empty
    --with-privsep-user=sshd
    --without-md5-passwords
    --without-selinux
    --with-pie
    --with-sandbox=seccomp_filter
    --without-rpath
    --disable-lastlog
    --disable-utmp
    --disable-utmpx
    --disable-wtmp
    --disable-wtmpx
    --disable-libutil
    --disable-pututline
    --disable-pututxline
    --without-openssl
    LD="${CC}"
)

DEFAULT_SRC_CONFIGURE_OPTIONS+=()

DEFAULT_SRC_CONFIGURE_OPTION_WITHS+=(
    'kerberos kerberos5'
    'ldns'
    'pam'
    'readline libedit'
    'security-key security-key-builtin'
    'providers:libressl openssl'
    'providers:libressl ssl-engine'
    'providers:openssl openssl'
    'providers:openssl ssl-engine'
)

DEFAULT_SRC_CONFIGURE_OPTION_ENABLES+=(
    security-key
)

WORK=${WORKBASE}/${MY_PNV}

openssh_pkg_pretend() {
    if [[ -z ${X509_VERSION} ]] && has_version --root ${CATEGORY}/${PN}[X509]; then
	elog "${PNV} doesn't (yet) support the X509 patch. If you rely on it, don't install ${PNV}."
    fi
}

openssh_src_prepare() {
    default

    if [[ -n ${X509_VERSION} ]]; then
	if option X509 ; then
	    expatch -p1 "${WORKBASE}/${X509_PATCH%.gz}"
	fi
    fi

    edo sed -i -e '/_PATH_XAUTH/s:/usr/X11R6/bin/xauth:/usr/bin/xauth:' pathnames.h
    edo sed -i -e "s:-lcrypto:$(${PKG_CONFIG} --libs openssl):" configure.ac
    edo sed -i -e "s#pkg-config#${PKG_CONFIG}#" contrib/Makefile

    eautoreconf
}

openssh_src_compile() {
    default

    if option gtk ; then
	emake -C contrib gnome-ssh-askpass2
    fi
}

openssh_src_test() {
    esandbox allow_net 'unix:/tmp/ssh-*/agent.*'
    esandbox allow_net 'unix:/tmp/openssh.regress.ctl-sock.*'
    esandbox allow_net --connect 'unix:/nonexistent'

    # There's a sandbox violation I can't whitelist:
    # Reason: bind{family=AF_UNIX path=/var/tmp/paludis/build/net-misc-openssh-5.7_p1/temp//ssh-GbKiXikI4746/agent.4746 abstract=false}
    # Using net/whitelist/bind/unix doesn't fix it so I'll sandunbox/net here for now.
    esandbox disable_net

    # NOTE(moben) fix tests during multiarch migration
    # this test copies /bin/l* around a bit through sftp and checks for corruption.
    # During the migration, /bin/l* doesn't exist. Change it to b* so it will always at least match bash
    # similar for the rest, but without wildcards
    [[ $(readlink -f /bin) == /bin ]] && edo sed -i -e 's#l\*#b\*#g' regress/sftp-{,bad}cmds.sh
    [[ -e /usr/bin/time ]] || edo sed -i -e "s#/usr/bin/time#/usr/$(exhost --build)/bin/time#g" regress/kextype.sh
    [[ -e /usr/bin/true ]] || edo sed -i -e "s#/usr/bin/true#/usr/$(exhost --build)/bin/true#g" regress/agent-pkcs11.sh
    [[ -e /bin/ls ]] || edo sed -i -e "s#/bin/ls#/usr/$(exhost --build)/bin/ls#g" regress/forwarding.sh

    if [[ -n ${X509_VERSION} ]]; then
	option X509 && export SSH_X509TESTS="blob_auth"
    fi

    # Disable prone to freeze/fail test for interop with TwistedConch (last checked: 7.8p1).
    edo sed '/TEST_SSH_CONCH/d' -i Makefile
    emake -j1 interop-tests compat-tests

    esandbox enable_net

    esandbox disallow_net 'unix:/tmp/ssh-*/agent.*'
    esandbox disallow_net 'unix:/tmp/openssh.regress.ctl-sock.*'
    esandbox disallow_net --connect 'unix:/nonexistent'
}

openssh_src_install() {
    emake install-nokeys DESTDIR="${IMAGE}"
    edo chmod 600 "${IMAGE}"/etc/ssh/sshd_config
    dobin contrib/ssh-copy-id

    keepdir /etc/ssh/ca
    keepdir /etc/skel/.ssh
    edo rmdir "${IMAGE}"/var{/empty,}

    if option pam ; then
	edo sed -e "/^#UsePAM /s:.*:UsePAM yes:" \
		-e "/^#PasswordAuthentication /s:.*:PasswordAuthentication no:" \
		-i "${IMAGE}"/etc/ssh/sshd_config
	pamd_mimic_system sshd remote-login auth account password session
    fi

    doman contrib/ssh-copy-id.1
    emagicdocs
    dodoc OVERVIEW sshd_config

    diropts -m 0700
    dodir /etc/skel/.ssh

    if option gtk ; then
	newbin contrib/gnome-ssh-askpass2 gnome-ssh-askpass
    fi

    install_systemd_files
    install_openrc_files
    dobin "${FILES}"/sshd-keygen.sh

    # fix installed service files to use correct host
    edo sed -e "s#/usr/host/#/usr/$(exhost --target)/#g" -i "${IMAGE}/${SYSTEMDSYSTEMUNITDIR}"/*.service

    # Delete empty dir.
    [[ -d ${IMAGE}/run ]] && edo rmdir "${IMAGE}"/run
}

openssh_pkg_postinst() {
    [[ ! -d ${ROOT}/var/empty ]] && edo mkdir -p "${ROOT}"/var/empty

    ewarn "Please be aware users need a valid shell in /etc/passwd"
    ewarn "in order to be allowed to login."

    ewarn "Please note that the default for the sshd_config(5) PermitRootLogin"
    ewarn "option has changed from 'yes' to 'prohibit-password'."

    ewarn "Please note that support for ssh-dss, ssh-dss-cert-* host and user"
    ewarn "keys is disabled by default at run-time."

    ewarn "Please note that Support for the 1024-bit diffie-hellman-group1-sha1"
    ewarn "key exchange is disabled by default at run-time."

    # if the root of init does not match our root, we are in a chroot and should not perform the
    # restart of the udev process
    if [[ -r /proc/1/root && /proc/1/root -ef /proc/self/root/ ]]; then
	if [[ -S /run/systemd/private ]]; then
	    # We are running systemd, use systemctl
	    esandbox allow_net --connect unix:/run/systemd/private
	    if systemctl is-active sshd; then
		# Updating to 8.2 causes sshd to not accept any connections until restarted
		einfo "Restarting sshd to ensure it's still working"
		nonfatal edo systemctl restart sshd
	    fi
	fi
    fi
}
